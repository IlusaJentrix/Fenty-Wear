{"ast":null,"code":"var _jsxFileName = \"/home/dennohdev/Practice/beauty-store/client/src/context/UserContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport default function UserProvider({\n  children\n}) {\n  _s();\n  const [onchange, setOnchange] = useState(false);\n  const [authToken, setAuthToken] = useState(() => sessionStorage.getItem(\"authToken\") ? sessionStorage.getItem(\"authToken\") : null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const url = \"http://localhost:5000\";\n  const navigate = useNavigate();\n\n  // add user\n  function addUser(username, email, phone, password) {\n    fetch(`${url}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        phone,\n        password\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        navigate(\"/products\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      }\n    });\n  }\n\n  // Update user\n  function updateUser(username, email, phone) {\n    fetch(`${url}/users`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        phone\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      }\n    });\n  }\n\n  // login user\n  function login(username, password) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.access_token) {\n        sessionStorage.setItem(\"authToken\", response.access_token);\n        setAuthToken(response.access_token);\n        navigate(\"/Events\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: \"Login success\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  // DELETE  user account\n  function delete_your_account() {\n    fetch(`${url}/users`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken && authToken}`\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        navigate(\"/register\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  // Logout user\n  function logout() {\n    sessionStorage.removeItem(\"authToken\");\n    setCurrentUser(null);\n    navigate(\"/\");\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Logout success\",\n      showConfirmButton: false,\n      timer: 1000\n    });\n  }\n\n  // Get Authenticated user\n  useEffect(() => {\n    if (authToken) {\n      fetch(`${url}/authenticated_user`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.email || response.username) {\n          setCurrentUser(response);\n        } else {\n          setCurrentUser(null);\n        }\n      });\n    }\n  }, [authToken, onchange]);\n  console.log(\"current user\", currentUser);\n\n  // context data\n  const contextData = {\n    addUser,\n    login,\n    updateUser,\n    logout,\n    currentUser,\n    delete_your_account,\n    authToken\n\n    // pass all your variables and function\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"AiN9twUe8UNe28VLiMeem7Sxuhg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","Swal","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","onchange","setOnchange","authToken","setAuthToken","sessionStorage","getItem","currentUser","setCurrentUser","url","navigate","addUser","username","email","phone","password","fetch","method","headers","body","JSON","stringify","then","res","json","response","success","fire","position","icon","title","showConfirmButton","timer","error","updateUser","Authorization","login","access_token","setItem","delete_your_account","logout","removeItem","Accept","console","log","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dennohdev/Practice/beauty-store/client/src/context/UserContext.js"],"sourcesContent":["\nimport {createContext, useState, useEffect} from \"react\"\nimport Swal from \"sweetalert2\"\nimport {useNavigate} from \"react-router-dom\"\n\nexport const UserContext = createContext();\n\n\n\nexport default function UserProvider({children}) \n{\n    const [onchange, setOnchange] = useState(false)\n    const [authToken, setAuthToken] = useState(()=> sessionStorage.getItem(\"authToken\")? sessionStorage.getItem(\"authToken\"): null )\n    const [currentUser, setCurrentUser] = useState(null)\n    const url = \"http://localhost:5000\"\n\n     const navigate = useNavigate()\n\n    // add user\n    function addUser(username,email,phone,password)\n    {\n        fetch(`${url}/users`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username,email,phone,password })\n\n        }\n        )\n        .then(res => res.json())\n        .then(response => {\n            \n            if (response.success)\n            {\n                navigate(\"/products\")\n\n                Swal.fire({\n                position: \"center\",\n                icon: \"success\",\n                title: response.success,\n                showConfirmButton: false,\n                timer: 1500\n                });\n                setOnchange(!onchange)\n            }\n            else{\n                Swal.fire({\n                    position: \"center\",\n                    icon: \"error\",\n                    title: response.error,\n                    showConfirmButton: false,\n                    timer: 1500\n                    });\n                    setOnchange(!onchange)\n            }\n\n\n        })\n    }\n\n        // Update user\n        function updateUser(username,email,phone)\n        {\n            fetch(`${url}/users`,{\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${authToken}`\n                },\n                body: JSON.stringify({username,email,phone })\n    \n            }\n            )\n            .then(res => res.json())\n            .then(response => {\n                \n                if (response.success)\n                {  \n                    Swal.fire({\n                    position: \"center\",\n                    icon: \"success\",\n                    title: response.success,\n                    showConfirmButton: false,\n                    timer: 1500\n                    });\n                    setOnchange(!onchange)\n                }\n                else{\n                    Swal.fire({\n                        position: \"center\",\n                        icon: \"error\",\n                        title: response.error,\n                        showConfirmButton: false,\n                        timer: 1500\n                        });\n                        setOnchange(!onchange)\n                }\n    \n    \n            })\n        }\n    \n    // login user\n    function login(username,password)\n    {\n        fetch(`${url}/login`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username,password })\n\n        }\n        )\n        .then(res => res.json())\n        .then(response => {\n            \n            if (response.access_token)\n            {\n                sessionStorage.setItem(\"authToken\", response.access_token);\n                setAuthToken(response.access_token)\n\n                navigate(\"/Events\")\n                Swal.fire({\n                position: \"center\",\n                icon: \"success\",\n                title: \"Login success\",\n                showConfirmButton: false,\n                timer: 1500\n                });\n\n                setOnchange(!onchange)\n            }\n            else{\n                Swal.fire({\n                    position: \"center\",\n                    icon: \"error\",\n                    title: response.error,\n                    showConfirmButton: false,\n                    timer: 1500\n                    });\n            }\n\n\n\n        })\n    }\n\n        // DELETE  user account\n        function delete_your_account()\n        {\n            fetch(`${url}/users`,{\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${authToken && authToken}`\n                },\n            }\n            )\n            .then(res => res.json())\n            .then(response => {\n                if (response.success)\n                {\n        \n                    navigate(\"/register\")\n\n                    Swal.fire({\n                    position: \"center\",\n                    icon: \"success\",\n                    title: response.success,\n                    showConfirmButton: false,\n                    timer: 1500\n                    });\n    \n                    setOnchange(!onchange)\n                }\n                else{\n                    Swal.fire({\n                        position: \"center\",\n                        icon: \"error\",\n                        title: response.error,\n                        showConfirmButton: false,\n                        timer: 1500\n                        });\n                }\n    \n    \n    \n            })\n        }\n\n    // Logout user\n    function logout()\n    {\n        sessionStorage.removeItem(\"authToken\");\n        setCurrentUser(null)\n        navigate(\"/\")\n\n        Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: \"Logout success\",\n            showConfirmButton: false,\n            timer: 1000\n            });\n\n    }\n    \n    // Get Authenticated user\n    useEffect(()=>{\n        if(authToken)\n        {\n            fetch(`${url}/authenticated_user`,{\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${authToken}`\n            }\n            })\n            .then(res => res.json())\n            .then(response => {\n                if(response.email || response.username){\n                    setCurrentUser(response)\n                }\n                else{\n                    setCurrentUser(null)\n                }\n            })\n        }\n    \n\n    }, [authToken, onchange])\n\n    console.log(\"current user\", currentUser)\n\n\n\n    // context data\n    const contextData = {\n        addUser,\n        login,\n        updateUser,\n        logout,\n        currentUser,\n        delete_your_account,\n        authToken\n\n        // pass all your variables and function\n    }\n\n  return (\n    <UserContext.Provider value={contextData} >\n       {children}\n    </UserContext.Provider>\n  )\n}\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}