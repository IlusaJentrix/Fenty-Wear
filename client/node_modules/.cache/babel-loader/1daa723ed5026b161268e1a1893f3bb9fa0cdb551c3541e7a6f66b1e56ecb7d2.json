{"ast":null,"code":"var _jsxFileName = \"/home/dennohdev/Practice/beauty-store/client/src/context/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport default function UserProvider({\n  children\n}) {\n  _s();\n  const [onchange, setOnchange] = useState(false);\n  const [authToken, setAuthToken] = useState(() => sessionStorage.getItem(\"authToken\") || null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [allUsers, setAllUsers] = useState([]);\n  const url = \"http://localhost:5000\";\n  const navigate = useNavigate();\n\n  // add user\n  function addUser(username, email, phone, password, role) {\n    fetch(`${url}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        phone,\n        password,\n        role\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        navigate(\"/login\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      }\n    });\n  }\n\n  // Update user\n  function updateUser(username, email, phone) {\n    fetch(`${url}/users`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        phone\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      }\n    });\n  }\n\n  // login user\n  function login(username, password) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(response => {\n      if (response.access_token) {\n        sessionStorage.setItem(\"authToken\", response.access_token);\n        setAuthToken(response.access_token);\n        navigate(\"/products\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: \"Login success\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.message,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  // DELETE  user account\n  function delete_your_account() {\n    fetch(`${url}/users`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken && authToken}`\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        navigate(\"/register\");\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.error,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  // function to delete an account\n  function deleteAccount(id) {\n    fetch(`${url}/admin/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken && authToken}`\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.success) {\n        Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.success,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setOnchange(!onchange);\n      } else {\n        Swal.fire({\n          position: \"center\",\n          icon: \"error\",\n          title: response.message,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  // Logout user\n  function logout() {\n    sessionStorage.removeItem(\"authToken\");\n    setCurrentUser(null);\n    navigate(\"/\");\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Logout success\",\n      showConfirmButton: false,\n      timer: 1000\n    });\n  }\n\n  // Get Authenticated user\n  useEffect(() => {\n    if (authToken) {\n      fetch(`${url}/authenticated_user`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.email || response.username) {\n          setCurrentUser(response);\n        } else {\n          setCurrentUser(null);\n        }\n      });\n    }\n  }, [authToken, onchange]);\n\n  // Fetch all users\n  const getAllUsers = useCallback(() => {\n    if (currentUser && currentUser.role) fetch(`${url}/admin/users`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.users) {\n        // Update the state with the fetched users\n        setAllUsers(response.users);\n      } else {\n        console.error(\"Failed to fetch users:\", response.message);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  }, [authToken]);\n  useEffect(() => {\n    if (authToken) {\n      getAllUsers();\n    }\n  }, [authToken, getAllUsers]);\n\n  // context data\n  const contextData = {\n    addUser,\n    login,\n    updateUser,\n    logout,\n    currentUser,\n    delete_your_account,\n    authToken,\n    getAllUsers,\n    allUsers,\n    deleteAccount\n    // pass all your variables and functions\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"ARQ93V1kmV1wvGkQrXIQmi+5ZrY=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","Swal","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","onchange","setOnchange","authToken","setAuthToken","sessionStorage","getItem","currentUser","setCurrentUser","allUsers","setAllUsers","url","navigate","addUser","username","email","phone","password","role","fetch","method","headers","body","JSON","stringify","then","res","json","response","success","fire","position","icon","title","showConfirmButton","timer","error","updateUser","Authorization","login","access_token","setItem","message","delete_your_account","deleteAccount","id","logout","removeItem","Accept","getAllUsers","users","console","catch","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dennohdev/Practice/beauty-store/client/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const UserContext = createContext();\n\nexport default function UserProvider({ children }) {\n  const [onchange, setOnchange] = useState(false);\n  const [authToken, setAuthToken] = useState(\n    () => sessionStorage.getItem(\"authToken\") || null\n  );\n  const [currentUser, setCurrentUser] = useState(null);\n  const [allUsers, setAllUsers] = useState([]);\n  const url = \"http://localhost:5000\";\n  const navigate = useNavigate();\n\n  // add user\n  function addUser(username, email, phone, password, role) {\n    fetch(`${url}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, phone, password, role }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.success) {\n          navigate(\"/login\");\n\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.success,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setOnchange(!onchange);\n        } else {\n          Swal.fire({\n            position: \"center\",\n            icon: \"error\",\n            title: response.error,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setOnchange(!onchange);\n        }\n      });\n  }\n\n  // Update user\n  function updateUser(username, email, phone) {\n    fetch(`${url}/users`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken}`,\n      },\n      body: JSON.stringify({ username, email, phone }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.success) {\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.success,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setOnchange(!onchange);\n        } else {\n          Swal.fire({\n            position: \"center\",\n            icon: \"error\",\n            title: response.error,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setOnchange(!onchange);\n        }\n      });\n  }\n\n  // login user\n  function login(username, password) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.access_token) {\n          sessionStorage.setItem(\"authToken\", response.access_token);\n          setAuthToken(response.access_token);\n\n          navigate(\"/products\");\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: \"Login success\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n\n          setOnchange(!onchange);\n        } else {\n          Swal.fire({\n            position: \"center\",\n            icon: \"error\",\n            title: response.message,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n        }\n      });\n  }\n\n  // DELETE  user account\n  function delete_your_account() {\n    fetch(`${url}/users`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken && authToken}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.success) {\n          navigate(\"/register\");\n\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.success,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n\n          setOnchange(!onchange);\n        } else {\n          Swal.fire({\n            position: \"center\",\n            icon: \"error\",\n            title: response.error,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n        }\n      });\n  }\n\n  // function to delete an account\n  function deleteAccount(id) {\n    fetch(`${url}/admin/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authToken && authToken}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.success) {\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.success,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setOnchange(!onchange);\n        } else {\n          Swal.fire({\n            position: \"center\",\n            icon: \"error\",\n            title: response.message,\n            showConfirmButton: false,\n            timer: 1500,\n          });\n        }\n      });\n  }\n\n  // Logout user\n  function logout() {\n    sessionStorage.removeItem(\"authToken\");\n    setCurrentUser(null);\n    navigate(\"/\");\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Logout success\",\n      showConfirmButton: false,\n      timer: 1000,\n    });\n  }\n\n  // Get Authenticated user\n  useEffect(() => {\n    if (authToken) {\n      fetch(`${url}/authenticated_user`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          if (response.email || response.username) {\n            setCurrentUser(response);\n          } else {\n            setCurrentUser(null);\n          }\n        });\n    }\n  }, [authToken, onchange]);\n\n  // Fetch all users\n  const getAllUsers = useCallback(() => {\n    if (currentUser && currentUser.role)\n    fetch(`${url}/admin/users`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.users) {\n          // Update the state with the fetched users\n          setAllUsers(response.users);\n        } else {\n          console.error(\"Failed to fetch users:\", response.message);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching users:\", error);\n      });\n  }, [authToken]);\n\n  useEffect(() => {\n    if (authToken) {\n      getAllUsers();\n    }\n  }, [authToken, getAllUsers]);\n\n  // context data\n  const contextData = {\n    addUser,\n    login,\n    updateUser,\n    logout,\n    currentUser,\n    delete_your_account,\n    authToken,\n    getAllUsers,\n    allUsers,\n    deleteAccount,\n    // pass all your variables and functions\n  };\n\n  return (\n    <UserContext.Provider value={contextData}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9E,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,eAAe,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CACxC,MAAMe,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAC/C,CAAC;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,GAAG,GAAG,uBAAuB;EACnC,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACA,SAASmB,OAAOA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IACvDC,KAAK,CAAE,GAAER,GAAI,WAAU,EAAE;MACvBS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC,KAAK;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAK,CAAC;IACjE,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBjB,QAAQ,CAAC,QAAQ,CAAC;QAElBnB,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEL,QAAQ,CAACC,OAAO;UACvBK,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLR,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEL,QAAQ,CAACQ,KAAK;UACrBF,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB;IACF,CAAC,CAAC;EACN;;EAEA;EACA,SAASoC,UAAUA,CAACvB,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC1CG,KAAK,CAAE,GAAER,GAAI,QAAO,EAAE;MACpBS,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCiB,aAAa,EAAG,UAASnC,SAAU;MACrC,CAAC;MACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC,KAAK;QAAEC;MAAM,CAAC;IACjD,CAAC,CAAC,CACCS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBpC,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEL,QAAQ,CAACC,OAAO;UACvBK,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLR,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEL,QAAQ,CAACQ,KAAK;UACrBF,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB;IACF,CAAC,CAAC;EACN;;EAEA;EACA,SAASsC,KAAKA,CAACzB,QAAQ,EAAEG,QAAQ,EAAE;IACjCE,KAAK,CAAE,GAAER,GAAI,QAAO,EAAE;MACpBS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEG;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACY,YAAY,EAAE;QACzBnC,cAAc,CAACoC,OAAO,CAAC,WAAW,EAAEb,QAAQ,CAACY,YAAY,CAAC;QAC1DpC,YAAY,CAACwB,QAAQ,CAACY,YAAY,CAAC;QAEnC5B,QAAQ,CAAC,WAAW,CAAC;QACrBnB,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,eAAe;UACtBC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QAEFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLR,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEL,QAAQ,CAACc,OAAO;UACvBR,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACN;;EAEA;EACA,SAASQ,mBAAmBA,CAAA,EAAG;IAC7BxB,KAAK,CAAE,GAAER,GAAI,QAAO,EAAE;MACpBS,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCiB,aAAa,EAAG,UAASnC,SAAS,IAAIA,SAAU;MAClD;IACF,CAAC,CAAC,CACCsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBjB,QAAQ,CAAC,WAAW,CAAC;QAErBnB,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEL,QAAQ,CAACC,OAAO;UACvBK,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QAEFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLR,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEL,QAAQ,CAACQ,KAAK;UACrBF,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACN;;EAEA;EACA,SAASS,aAAaA,CAACC,EAAE,EAAE;IACzB1B,KAAK,CAAE,GAAER,GAAI,gBAAekC,EAAG,EAAC,EAAE;MAChCzB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCiB,aAAa,EAAG,UAASnC,SAAS,IAAIA,SAAU;MAClD;IACF,CAAC,CAAC,CACCsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBpC,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEL,QAAQ,CAACC,OAAO;UACvBK,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACFjC,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAC,MAAM;QACLR,IAAI,CAACqC,IAAI,CAAC;UACRC,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEL,QAAQ,CAACc,OAAO;UACvBR,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACN;;EAEA;EACA,SAASW,MAAMA,CAAA,EAAG;IAChBzC,cAAc,CAAC0C,UAAU,CAAC,WAAW,CAAC;IACtCvC,cAAc,CAAC,IAAI,CAAC;IACpBI,QAAQ,CAAC,GAAG,CAAC;IAEbnB,IAAI,CAACqC,IAAI,CAAC;MACRC,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,gBAAgB;MACvBC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;;EAEA;EACA5C,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACbgB,KAAK,CAAE,GAAER,GAAI,qBAAoB,EAAE;QACjCS,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP2B,MAAM,EAAE,kBAAkB;UAC1BV,aAAa,EAAG,UAASnC,SAAU;QACrC;MACF,CAAC,CAAC,CACCsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACb,KAAK,IAAIa,QAAQ,CAACd,QAAQ,EAAE;UACvCN,cAAc,CAACoB,QAAQ,CAAC;QAC1B,CAAC,MAAM;UACLpB,cAAc,CAAC,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACL,SAAS,EAAEF,QAAQ,CAAC,CAAC;;EAEzB;EACA,MAAMgD,WAAW,GAAGzD,WAAW,CAAC,MAAM;IACpC,IAAIe,WAAW,IAAIA,WAAW,CAACW,IAAI,EACnCC,KAAK,CAAE,GAAER,GAAI,cAAa,EAAE;MAC1BS,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP2B,MAAM,EAAE,kBAAkB;QAC1BV,aAAa,EAAG,UAASnC,SAAU;MACrC;IACF,CAAC,CAAC,CACCsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACsB,KAAK,EAAE;QAClB;QACAxC,WAAW,CAACkB,QAAQ,CAACsB,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLC,OAAO,CAACf,KAAK,CAAC,wBAAwB,EAAER,QAAQ,CAACc,OAAO,CAAC;MAC3D;IACF,CAAC,CAAC,CACDU,KAAK,CAAEhB,KAAK,IAAK;MAChBe,OAAO,CAACf,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,CAACjC,SAAS,CAAC,CAAC;EAEfZ,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACb8C,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAAC9C,SAAS,EAAE8C,WAAW,CAAC,CAAC;;EAE5B;EACA,MAAMI,WAAW,GAAG;IAClBxC,OAAO;IACP0B,KAAK;IACLF,UAAU;IACVS,MAAM;IACNvC,WAAW;IACXoC,mBAAmB;IACnBxC,SAAS;IACT8C,WAAW;IACXxC,QAAQ;IACRmC;IACA;EACF,CAAC;EAED,oBACEhD,OAAA,CAACC,WAAW,CAACyD,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAtD,QAAA,EACtCA;EAAQ;IAAAyD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC3D,EAAA,CA7QuBF,YAAY;EAAA,QAQjBJ,WAAW;AAAA;AAAAkE,EAAA,GARN9D,YAAY;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}